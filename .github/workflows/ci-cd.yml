name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job de tests
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  # Job de build
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build

  # Job de dÃ©ploiement
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Backup Database
        run: |
          docker-compose exec db pg_dump -U postgres bridge_arbitrage > backup.sql
          gzip backup.sql
      - name: Apply Migrations
        run: |
          docker-compose exec db psql -U postgres bridge_arbitrage -f migrations/$(ls migrations/ | sort -r | head -n 1)
      - name: Deploy Application
        run: |
          docker-compose up -d --force-recreate
